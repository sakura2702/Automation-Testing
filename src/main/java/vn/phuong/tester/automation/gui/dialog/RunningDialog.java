/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vn.phuong.tester.automation.gui.dialog;

import java.awt.Frame;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.apache.commons.lang3.StringUtils;
import vn.phuong.tester.automation.bean.FunctionBean;
import vn.phuong.tester.automation.config.UserConfiguration;
import vn.phuong.tester.automation.constraint.Browser;
import vn.phuong.tester.automation.gui.model.ResultModel;
import vn.phuong.tester.automation.service.MyExcelHelper;
import vn.phuong.tester.automation.testcase.TestCase;

import javax.swing.*;

/**
 *
 * @author phuong.nguyenthi
 */
public class RunningDialog extends javax.swing.JDialog {

    private boolean isPause =false;
    private boolean isCancel = false;
    private boolean finallyResult = true;
    private boolean isStopWhenError = true;
    private boolean isReload = false;
    private ResultModel resultModel;
    private RunningTask task;
    private List<TestCase> data;

    private Logger LOGGER = Logger.getLogger(RunningDialog.class.getName());

    public RunningDialog(Frame parent, FunctionBean job, MyExcelHelper excelHelper, boolean isStopWhenError) {
        this(parent, new ArrayList<>(job.getTestScriptData().getTestCases().values()), excelHelper, isStopWhenError, job.getUserConfiguration());
    }

    public RunningDialog(Frame parent, MyExcelHelper excelHelper, TestCase singleTestCase, boolean isStopWhenError, UserConfiguration configuration){
        this(parent, Arrays.asList(singleTestCase), excelHelper, isStopWhenError, configuration);
    }

    public RunningDialog(Frame parent, List<TestCase> testCases, MyExcelHelper helper, boolean isStopWhenError, UserConfiguration configuration){
        super(parent, true);
        this.isStopWhenError = isStopWhenError;
        try {
            this.data = prepareData(testCases, configuration);
        } catch (Exception ex) {
            LOGGER.log(Level.SEVERE, "Cannot init web driver!", ex);
            JOptionPane.showMessageDialog(this, "Không thể khởi tạo webdriver!", "Thông báo lỗi!", JOptionPane.ERROR_MESSAGE);
            return;
        }
        this.setResultModel(new ResultModel(data));
        initComponents();
        //Run test case
        task = new RunningTask(this, data, configuration, helper);
        task.execute();
    }



    public void reRunTestCase(){
        getResultModel().resetResult();
        //clone task
        new RunningTask(task).execute();
    }

    private List<TestCase> prepareData(List<TestCase> testCases, UserConfiguration configuration)throws Exception {
        List<TestCase> data = new ArrayList<>();
//        try {
        List<Browser> browsers = initWebDriver(configuration);
//        } catch (Exception ex) {
//
//        }
        for (Browser browser : browsers) {
            for (TestCase testCase : testCases) {
                testCase.setBrowser(browser);
                data.add(new TestCase(testCase));
            }
        }
        return data;
    }

    private List<Browser> initWebDriver(UserConfiguration configuration) throws Exception{
        List<Browser> drivers = new ArrayList<>();
//        DriverLoaderHelper driverLoaderHelper = new DriverLoaderHelper();
        Browser browser = Browser.valueOf(Browser.preProcess(configuration.getBrowser()));
        if (browser == null || Browser.FIREFOX.equals(browser) || Browser.ALL.equals(browser)) {
            drivers.add(Browser.FIREFOX);
        }
        if (Browser.CHROME.equals(browser)  || Browser.ALL.equals(browser)) {
            System.setProperty("webdriver.chrome.driver", getClass().getClassLoader().getResource("driver/chromedriver.exe").toString().replace("file:/",""));
            drivers.add(Browser.CHROME);
        }
        if (Browser.IE.equals(browser) || Browser.ALL.equals(browser)) {
            System.setProperty("webdriver.ie.driver", getClass().getClassLoader().getResource("driver/IEDriverServer.exe").toString().replace("file:/", ""));
            drivers.add(Browser.IE);
        }
        return drivers;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        setLog(new javax.swing.JTextArea());
        btPause = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setType(java.awt.Window.Type.POPUP);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jTabbedPane1.setToolTipText("");

        jTable1.setModel(getResultModel());
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Tống Quan", jPanel1);

        getLog().setEditable(false);
        getLog().setColumns(20);
        getLog().setRows(5);
        getLog().setCaretPosition(getLog().getDocument().getLength());
        getLog().setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jScrollPane2.setViewportView(getLog());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        jTabbedPane1.addTab("Log", jPanel2);

        btPause.setText("Tạm dừng");
        btPause.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btPauseMouseClicked(evt);
            }
        });

        jLabel2.setText("Tiến Trình:");

        jProgressBar1.setStringPainted(true);

        jButton1.setText("Thoát");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btPause)
                        .addGap(3, 3, 3)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btPause)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        task.cancel(true);
        this.setIsCancel(true);
    }//GEN-LAST:event_formWindowClosed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        this.dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    private void btPauseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btPauseMouseClicked
        if(isReload()) {
            getLog().setText(StringUtils.EMPTY);
            reRunTestCase();
            btPause.setText("Tạm dừng");
            setIsReload(false);
            return;
        }
        if(isPause()){
            btPause.setText("Tạm dừng");
        }else{
            btPause.setText("Tiếp tục");
        }
        setIsPause(!isPause());
    }//GEN-LAST:event_btPauseMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btPause;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea log;
    // End of variables declaration//GEN-END:variables

    public boolean isPause() {
        return isPause;
    }

    public void setIsPause(boolean isPause) {
        this.isPause = isPause;
    }

    public boolean isCancel() {
        return isCancel;
    }

    public void setIsCancel(boolean isCancel) {
        this.isCancel = isCancel;
    }

    public boolean isStopWhenError() {
        return isStopWhenError;
    }

    public void setIsStopWhenError(boolean isStopWhenError) {
        this.isStopWhenError = isStopWhenError;
    }

    public boolean isReload() {
        return isReload;
    }

    public void setIsReload(boolean isReload) {
        this.isReload = isReload;
    }

    public javax.swing.JTextArea getLog() {
        return log;
    }

    public void setLog(javax.swing.JTextArea log) {
        this.log = log;
    }

    public ResultModel getResultModel() {
        return resultModel;
    }

    public void setResultModel(ResultModel resultModel) {
        this.resultModel = resultModel;
    }

    public boolean isFinallyResult() {
        return finallyResult;
    }

    public void setFinallyResult(boolean finallyResult) {
        this.finallyResult = finallyResult;
    }

    public javax.swing.JProgressBar getjProgressBar1() {
        return jProgressBar1;
    }

    public void setjProgressBar1(javax.swing.JProgressBar jProgressBar1) {
        this.jProgressBar1 = jProgressBar1;
    }

    public javax.swing.JButton getBtPause() {
        return btPause;
    }

    public void setBtPause(javax.swing.JButton btPause) {
        this.btPause = btPause;
    }

}
